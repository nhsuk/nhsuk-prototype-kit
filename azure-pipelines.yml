pool:
  vmImage: 'ubuntu-latest'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'nhsdigital'
    scannerMode: 'CLI'
    configMode: 'file'
    extraProperties: |
      sonar.javascript.lcov.reportPaths=coverage/lcov.info
      sonar.language=js
      sonar.projectKey=nhsuk-prototype-kit
      sonar.sourceEncoding=UTF-8
      sonar.dependencyCheck.htmlReportPath=$(System.DefaultWorkingDirectory)/dependency-scan-results/dependency-check-report.html

- task: Npm@1
  displayName: 'npm install'
  inputs:
    verbose: true
    
- task: Npm@1
  displayName: 'npm run build'
  inputs:
    command: 'custom'
    customCommand: run build
    verbose: true

- task: Npm@1
  displayName: 'npm run test'
  inputs:
    command: 'custom'
    customCommand: run test
    verbose: true

- script: |
    pat=$(AZURE_DEVOPS_PERSONAL_PAT)
    azBuildId=$(curl -s -u :$pat \
      -H "Content-Type: application/json" \
      "https://dev.azure.com/nhsuk/nhsuk.utilities/_apis/build/latest/1395?branchName=main&resultFilter=succeeded&statusFilter=completed&api-version=7.1-preview.1" | jq '.id')
    
    echo "azBuildId" $azBuildId
    echo $pat | az devops login --org "https://dev.azure.com/nhsuk/"
    az pipelines runs artifact download \
      --artifact-name owasp \
      --path $(Pipeline.Workspace)/owasp \
      --run-id $azBuildId \
      --org "https://dev.azure.com/nhsuk/" \
      --project nhsuk.utilities
    
    find $(Pipeline.Workspace)/owasp/ -type f -iname "*.sh" -exec chmod +x {} \;
  displayName: 'Install & Login Azure DevOps Extension'
    
- task: Bash@3
  inputs:
    filePath: '$(Pipeline.Workspace)/owasp/run_owasp_scanner.sh'
    arguments: '--scan "$(System.DefaultWorkingDirectory)" --failOnCVSS "7" --project "nhsuk.nhsuk-prototype-kit" --out "$(System.DefaultWorkingDirectory)/dependency-scan-results" --suppression $(System.DefaultWorkingDirectory)/owasp-dependency-check-suppressions.xml --format HTML --format JUNIT --format JSON'
  displayName: Run OWASP Dependency Check

- task: PublishTestResults@2
  displayName: 'Publish OWASP Dependency Check Results'
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/dependency-scan-results/dependency-check-junit.xml'
    testRunTitle: 'Dependency check'

- task: PublishBuildArtifacts@1
  displayName: Publish Owasp Artifact
  condition: succeededOrFailed()
  inputs:
    ArtifactName: Owasp
    TargetPath: '$(System.DefaultWorkingDirectory)/dependency-scan-results/'

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud Code Analysis'

- task: SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'

- task: sonarcloud-buildbreaker@2
  displayName: "Break the build if the quality gate fails"
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'nhsdigital'

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'

    includeRootFolder: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts: drop'
